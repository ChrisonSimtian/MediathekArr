// <auto-generated />
using System;
using MediathekArr.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MediathekArr.Migrations
{
    [DbContext(typeof(MediathekArrContext))]
    [Migration("20250203224907_AddRulesetApi")]
    partial class AddRulesetApi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("MediathekArr.Models.Rulesets.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "media_id");

                    b.Property<string>("ImdbId")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "media_imdbId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "media_name");

                    b.Property<int?>("TmdbId")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "media_tmdbId");

                    b.Property<int?>("TvdbId")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "media_tvdbId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "media_type");

                    b.HasKey("Id");

                    b.ToTable("Media", "Rulesets");

                    b.HasAnnotation("Relational:JsonPropertyName", "media");
                });

            modelBuilder.Entity("MediathekArr.Models.Rulesets.Ruleset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("EpisodeRegex")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "episodeRegex");

                    b.Property<string>("FiltersJson")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "filters");

                    b.Property<int>("MatchingStrategy")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "matchingStrategy");

                    b.Property<int>("MediaId")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "mediaId");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER")
                        .HasAnnotation("Relational:JsonPropertyName", "priority");

                    b.Property<string>("SeasonRegex")
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "seasonRegex");

                    b.Property<string>("TitleRegexRulesJson")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "titleRegexRules");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasAnnotation("Relational:JsonPropertyName", "topic");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Rulesets", "Rulesets");
                });

            modelBuilder.Entity("MediathekArr.Models.Tvdb.Episode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Aired")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Runtime")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeriesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Episodes", "Tvdb");
                });

            modelBuilder.Entity("MediathekArr.Models.Tvdb.Series", b =>
                {
                    b.Property<int>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CacheExpiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("GermanName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastAired")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("NextAired")
                        .HasColumnType("TEXT");

                    b.HasKey("SeriesId");

                    b.ToTable("Series", "Tvdb");
                });

            modelBuilder.Entity("MediathekArr.Models.Rulesets.Ruleset", b =>
                {
                    b.HasOne("MediathekArr.Models.Rulesets.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");
                });

            modelBuilder.Entity("MediathekArr.Models.Tvdb.Episode", b =>
                {
                    b.HasOne("MediathekArr.Models.Tvdb.Series", "Series")
                        .WithMany("Episodes")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("MediathekArr.Models.Tvdb.Series", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
